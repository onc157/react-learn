import './style.scss'import {Form, FormikProvider, useFormik} from "formik";import {getAuthUserData, userLogin, userLogout} from "../../redux/reducers/auth-reducer";import {connect} from "react-redux";import {Box, Button, Checkbox, FormControlLabel} from "@material-ui/core";import {authValidationSchema as validationSchema} from "../../utils/validationSchemas";import {InputField} from "../common/InputField";import {Redirect} from "react-router";const Auth = (props) => {    const formik = useFormik({        initialValues: {            email: '',            password: '',            rememberMe: false,        },        validationSchema,        onSubmit: async values => {            await props.userLogin(values)        },    });    if (props.isAuth) {        return <Redirect to={'/profile'}/>    }    return (        <div className='auth-wrapper'>            <FormikProvider value={formik} >                <Form className='auth-form'>                    <InputField                        fullWidth                        required                        type="text"                        name="email"                        label="Enter email"                    />                    <InputField                        fullWidth                        required                        type="password"                        name="password"                        label="Enter password"/>                    <Box>                        <FormControlLabel                            control={<Checkbox name="rememberMe" color="primary" onChange={formik.handleChange} checked={formik.values.rememberMe}/>}                            label="Remember me:"                            labelPlacement="start"                        />                    </Box>                    <Box>                        <Button type="submit" variant="contained" color="primary" disabled={!formik.isValid}>Sign In</Button>                    </Box>                </Form>            </FormikProvider>        </div>    )}const mapStateToProps = (state) => ({    isAuth: state.auth.isAuth})export default connect(mapStateToProps, { userLogin, userLogout, getAuthUserData })(Auth)